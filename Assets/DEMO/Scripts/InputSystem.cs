//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""4b5df65c-b9cd-4a18-a819-557656360526"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""77fa56ef-91e7-4950-b54f-71a54f9b7b16"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a853bd16-5c7d-42e6-bf07-b60ee614ff4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2d81deac-03ed-41cb-b088-3b777401aa15"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""1fa4d4da-2d8b-48b8-b3c1-dc8bca90eabc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprinReleased"",
                    ""type"": ""Button"",
                    ""id"": ""d0ddbcb1-f7e8-4888-977d-8861a57788f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shooting"",
                    ""type"": ""Button"",
                    ""id"": ""33844179-0671-4b0c-955f-faee31361b9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeShooting"",
                    ""type"": ""Button"",
                    ""id"": ""3d93a45d-ca0d-4f85-97d7-a679ed2d0d2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scoping"",
                    ""type"": ""Button"",
                    ""id"": ""a6df6fc8-ad14-4333-a031-2b24b42a1d81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopScoping"",
                    ""type"": ""Button"",
                    ""id"": ""edb1416a-0eeb-4e8e-8d88-0e55f13ebdcb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""c3a82555-e29a-402d-b037-adb958c9e780"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1c36a7fd-504b-4327-b23a-e0ef8594d33f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""031ac642-461f-4bae-b978-9f34288b3727"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""31488e07-1147-4e02-a591-319b3277266b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cb56d687-2d89-4722-9a21-d6703a7688e7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2ce2a673-b7ac-4726-9e5e-fc232150771a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""137d5ae2-3db4-41d5-a129-145d366dc43a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff31ca04-b7df-446d-9292-10b90b687dc8"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdcff5ac-cf3b-4748-8aad-43552f7ce82e"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprinReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e0b407b-5c42-400d-9044-25d5529f8e99"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shooting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3870cf99-5f38-4c89-a633-85ee051e13e6"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeShooting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed21ecfe-7194-4863-a6ed-f6776986276b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scoping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b6ab2a9-1c50-4c42-8730-da802970e8cf"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopScoping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_Movement = m_PlayerControls.FindAction("Movement", throwIfNotFound: true);
        m_PlayerControls_Jump = m_PlayerControls.FindAction("Jump", throwIfNotFound: true);
        m_PlayerControls_Mouse = m_PlayerControls.FindAction("Mouse", throwIfNotFound: true);
        m_PlayerControls_Sprint = m_PlayerControls.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerControls_SprinReleased = m_PlayerControls.FindAction("SprinReleased", throwIfNotFound: true);
        m_PlayerControls_Shooting = m_PlayerControls.FindAction("Shooting", throwIfNotFound: true);
        m_PlayerControls_ChangeShooting = m_PlayerControls.FindAction("ChangeShooting", throwIfNotFound: true);
        m_PlayerControls_Scoping = m_PlayerControls.FindAction("Scoping", throwIfNotFound: true);
        m_PlayerControls_StopScoping = m_PlayerControls.FindAction("StopScoping", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private IPlayerControlsActions m_PlayerControlsActionsCallbackInterface;
    private readonly InputAction m_PlayerControls_Movement;
    private readonly InputAction m_PlayerControls_Jump;
    private readonly InputAction m_PlayerControls_Mouse;
    private readonly InputAction m_PlayerControls_Sprint;
    private readonly InputAction m_PlayerControls_SprinReleased;
    private readonly InputAction m_PlayerControls_Shooting;
    private readonly InputAction m_PlayerControls_ChangeShooting;
    private readonly InputAction m_PlayerControls_Scoping;
    private readonly InputAction m_PlayerControls_StopScoping;
    public struct PlayerControlsActions
    {
        private @InputSystem m_Wrapper;
        public PlayerControlsActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerControls_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerControls_Jump;
        public InputAction @Mouse => m_Wrapper.m_PlayerControls_Mouse;
        public InputAction @Sprint => m_Wrapper.m_PlayerControls_Sprint;
        public InputAction @SprinReleased => m_Wrapper.m_PlayerControls_SprinReleased;
        public InputAction @Shooting => m_Wrapper.m_PlayerControls_Shooting;
        public InputAction @ChangeShooting => m_Wrapper.m_PlayerControls_ChangeShooting;
        public InputAction @Scoping => m_Wrapper.m_PlayerControls_Scoping;
        public InputAction @StopScoping => m_Wrapper.m_PlayerControls_StopScoping;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnJump;
                @Mouse.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMouse;
                @Sprint.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSprint;
                @SprinReleased.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSprinReleased;
                @SprinReleased.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSprinReleased;
                @SprinReleased.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSprinReleased;
                @Shooting.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnShooting;
                @Shooting.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnShooting;
                @Shooting.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnShooting;
                @ChangeShooting.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnChangeShooting;
                @ChangeShooting.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnChangeShooting;
                @ChangeShooting.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnChangeShooting;
                @Scoping.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnScoping;
                @Scoping.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnScoping;
                @Scoping.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnScoping;
                @StopScoping.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnStopScoping;
                @StopScoping.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnStopScoping;
                @StopScoping.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnStopScoping;
            }
            m_Wrapper.m_PlayerControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @SprinReleased.started += instance.OnSprinReleased;
                @SprinReleased.performed += instance.OnSprinReleased;
                @SprinReleased.canceled += instance.OnSprinReleased;
                @Shooting.started += instance.OnShooting;
                @Shooting.performed += instance.OnShooting;
                @Shooting.canceled += instance.OnShooting;
                @ChangeShooting.started += instance.OnChangeShooting;
                @ChangeShooting.performed += instance.OnChangeShooting;
                @ChangeShooting.canceled += instance.OnChangeShooting;
                @Scoping.started += instance.OnScoping;
                @Scoping.performed += instance.OnScoping;
                @Scoping.canceled += instance.OnScoping;
                @StopScoping.started += instance.OnStopScoping;
                @StopScoping.performed += instance.OnStopScoping;
                @StopScoping.canceled += instance.OnStopScoping;
            }
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);
    public interface IPlayerControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnSprinReleased(InputAction.CallbackContext context);
        void OnShooting(InputAction.CallbackContext context);
        void OnChangeShooting(InputAction.CallbackContext context);
        void OnScoping(InputAction.CallbackContext context);
        void OnStopScoping(InputAction.CallbackContext context);
    }
}
